// Copyright (c) 2022 COMCREATE. All rights reserved.
// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY STDIC(Static tree DIContainer). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618 // CS0618
#pragma warning disable 612 // CS0612
#pragma warning disable 414 // CS0414
#pragma warning disable 168 // CS0168

#pragma warning disable SA1649
#pragma warning disable SA1312
#pragma warning disable SA1200

namespace STDIC
{
    public class GeneratedResolver : global::STDIC.IResolver
    {        
        public global::System.Collections.Generic.IEnumerable<global::System.Type> HasInjectConstructorTypes =>
            GeneratedResolverGetConstructorHelper.Keys;

        public global::STDIC.IConstructor<T> GetConstructor<T>()
        {
            return ConstructorCache<T>.Constructor;
        }

        private static class ConstructorCache<T>
        {
            public static readonly global::STDIC.IConstructor<T> Constructor;

            static ConstructorCache()
            {
                Constructor = (global::STDIC.IConstructor<T>)GeneratedResolverGetConstructorHelper.GetConstructor(typeof(T));
            }
        }
    }

    internal static class GeneratedResolverGetConstructorHelper
    {
        private static readonly global::System.Collections.Generic.Dictionary<global::System.Type, int>
            ConstructorMap = new global::System.Collections.Generic.Dictionary<global::System.Type, int>()
            {
                // SampleApp.Infrastructure.Repository.ToDoLocalRepository
                { typeof(SampleApp.Infrastructure.Repository.ToDoLocalRepository), 0 },
                // SampleApp.Infrastructure.Helper.LocalDataBaseHelper
                { typeof(SampleApp.Infrastructure.Helper.LocalDataBaseHelper), 1 },
                // SampleApp.Domain.Service.ToDoService
                { typeof(SampleApp.Domain.Service.ToDoService), 2 },
            };

        internal static global::System.Collections.Generic.IEnumerable<global::System.Type> Keys => ConstructorMap.Keys;

        internal static global::STDIC.IConstructor GetConstructor(global::System.Type t)
        {
            if (!ConstructorMap.TryGetValue(t, out var index)) return null;
            return index switch
            {
                0 => new SampleApp_Infrastructure_Repository_ToDoLocalRepositoryConstructor(),
                1 => new SampleApp_Infrastructure_Helper_LocalDataBaseHelperConstructor(),
                2 => new SampleApp_Domain_Service_ToDoServiceConstructor(),
                _ => null
            };
        }
    }
}

#pragma warning restore 618 // CS0618
#pragma warning restore 612 // CS0612
#pragma warning restore 414 // CS0414
#pragma warning restore 168 // CS0168

#pragma warning restore SA1649
#pragma warning restore SA1312
#pragma warning restore SA1200

// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY STDIC(Static tree DIContainer). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618 // CS0618
#pragma warning disable 612 // CS0612
#pragma warning disable 414 // CS0414
#pragma warning disable 168 // CS0168

#pragma warning disable SA1649
#pragma warning disable SA1403
#pragma warning disable SA1312
#pragma warning disable SA1309
#pragma warning disable SA1200
#pragma warning disable SA1129

namespace STDIC
{
    // SampleApp.Infrastructure.Repository.ToDoLocalRepository
    // ReSharper disable once InconsistentNaming
    internal class SampleApp_Infrastructure_Repository_ToDoLocalRepositoryConstructor :
        global::STDIC.IConstructor<SampleApp.Infrastructure.Repository.ToDoLocalRepository>
    {
        private readonly global::System.Type[] _parameterTypes;

        public SampleApp_Infrastructure_Repository_ToDoLocalRepositoryConstructor()
        {
            _parameterTypes = new global::System.Type[]
            {
                // SampleApp.Infrastructure.Helper.LocalDataBaseHelper
                typeof(SampleApp.Infrastructure.Helper.LocalDataBaseHelper),
            };
        }

        public global::System.Type[] GetParameterTypes() => _parameterTypes;

        public SampleApp.Infrastructure.Repository.ToDoLocalRepository New(object[] parameters)
        {
            return new SampleApp.Infrastructure.Repository.ToDoLocalRepository(
                // SampleApp.Infrastructure.Helper.LocalDataBaseHelper
                (SampleApp.Infrastructure.Helper.LocalDataBaseHelper)parameters[0]
            );
        }
    }

    // SampleApp.Infrastructure.Helper.LocalDataBaseHelper
    // ReSharper disable once InconsistentNaming
    internal class SampleApp_Infrastructure_Helper_LocalDataBaseHelperConstructor :
        global::STDIC.IConstructor<SampleApp.Infrastructure.Helper.LocalDataBaseHelper>
    {
        private readonly global::System.Type[] _parameterTypes;

        public SampleApp_Infrastructure_Helper_LocalDataBaseHelperConstructor()
        {
            _parameterTypes = new global::System.Type[]
            {
            };
        }

        public global::System.Type[] GetParameterTypes() => _parameterTypes;

        public SampleApp.Infrastructure.Helper.LocalDataBaseHelper New(object[] parameters)
        {
            return new SampleApp.Infrastructure.Helper.LocalDataBaseHelper();
        }
    }

    // SampleApp.Domain.Service.ToDoService
    // ReSharper disable once InconsistentNaming
    internal class SampleApp_Domain_Service_ToDoServiceConstructor :
        global::STDIC.IConstructor<SampleApp.Domain.Service.ToDoService>
    {
        private readonly global::System.Type[] _parameterTypes;

        public SampleApp_Domain_Service_ToDoServiceConstructor()
        {
            _parameterTypes = new global::System.Type[]
            {
                // SampleApp.Domain.Repository.IToDoRepository
                typeof(SampleApp.Domain.Repository.IToDoRepository),
                // SampleApp.Domain.Repository.ITodoEventRepository
                typeof(SampleApp.Domain.Repository.ITodoEventRepository),
            };
        }

        public global::System.Type[] GetParameterTypes() => _parameterTypes;

        public SampleApp.Domain.Service.ToDoService New(object[] parameters)
        {
            return new SampleApp.Domain.Service.ToDoService(
                // SampleApp.Domain.Repository.IToDoRepository
                (SampleApp.Domain.Repository.IToDoRepository)parameters[0],

                // SampleApp.Domain.Repository.ITodoEventRepository
                (SampleApp.Domain.Repository.ITodoEventRepository)parameters[1]
            );
        }
    }

}

#pragma warning restore 618 // CS0618
#pragma warning restore 612 // CS0612
#pragma warning restore 414 // CS0414
#pragma warning restore 168 // CS0168

#pragma warning restore SA1649
#pragma warning restore SA1403
#pragma warning restore SA1312
#pragma warning restore SA1309
#pragma warning restore SA1200
#pragma warning restore SA1129
