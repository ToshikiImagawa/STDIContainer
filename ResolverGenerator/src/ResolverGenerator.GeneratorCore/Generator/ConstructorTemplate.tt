<#@ template debug="false" hostspecific="false" linePragmas="false" language="C#" #>
// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY STDIC(Static tree DIContainer). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618 // CS0618
#pragma warning disable 612 // CS0612
#pragma warning disable 414 // CS0414
#pragma warning disable 168 // CS0168

#pragma warning disable SA1649
#pragma warning disable SA1403
#pragma warning disable SA1312
#pragma warning disable SA1309
#pragma warning disable SA1200
#pragma warning disable SA1129

namespace <#= Namespace #>
{
<#
    for (var i = 0; i < ConstructorInfos.Length; i++)
    {
        var constructorInfo = ConstructorInfos[i];
#>
    // <#= constructorInfo.FullName #>
    // ReSharper disable once InconsistentNaming
    internal class <#= constructorInfo.ConstructorName #> :
        global::STDIC.IConstructor<<#= constructorInfo.FullName #>>
    {
        private readonly global::System.Type[] _parameterTypes;

        public <#= constructorInfo.ConstructorName #>()
        {
            _parameterTypes = new global::System.Type[]
            {
<#
        foreach (var parameterTypeInfo in constructorInfo.ParameterTypeInfos)
        {
#>
                // <#= parameterTypeInfo.FullName #>
                typeof(<#= parameterTypeInfo.FullName #>),
<#
        }
#>
            };
        }

        public global::System.Type[] GetParameterTypes() => _parameterTypes;

        public <#= constructorInfo.FullName #> New(object[] parameters)
        {
<#
        if (constructorInfo.ParameterTypeInfos.Length > 0)
        {
#>
            return new <#= constructorInfo.FullName #>(
<#
            for (var j = 0; j < constructorInfo.ParameterTypeInfos.Length; j++)
            {
                var parameterTypeInfo = constructorInfo.ParameterTypeInfos[j];
#>
                // <#= parameterTypeInfo.FullName #>
                (<#= parameterTypeInfo.FullName #>)parameters[<#= j #>]<#
                if (j < constructorInfo.ParameterTypeInfos.Length - 1)
                {
#>,
<#
                }
#>

<#
            }
#>
            );
<#
        }
        else
        {
#>
            return new <#= constructorInfo.FullName #>();
<#
        }
#>
        }
    }

<#
    }
#>
}

#pragma warning restore 618 // CS0618
#pragma warning restore 612 // CS0612
#pragma warning restore 414 // CS0414
#pragma warning restore 168 // CS0168

#pragma warning restore SA1649
#pragma warning restore SA1403
#pragma warning restore SA1312
#pragma warning restore SA1309
#pragma warning restore SA1200
#pragma warning restore SA1129